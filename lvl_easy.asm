.data
LEVEL_EASY \
    BYTE Q_REPEAT_X + 18, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 41, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_NEXT, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 32, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 39, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 33, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 68, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 4, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 4, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 67, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 9, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 22, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 9, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 32, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 10, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 42, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 32, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 26, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 39, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 26, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 19, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 29, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 10, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 10, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 13, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 9, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 18, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 9, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 13, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 10, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 10, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 10, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 34, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 10, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 19, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 28, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 22, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 27, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 39, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 22, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 28, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 18, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 13, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 22, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 4, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 19, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 11, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 13, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 22, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 13, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 23, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 16, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 18, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 22, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 14, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 25, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 7, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 5, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 26, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 12, (B_WHITE + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 17, (B_WHITE + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 6, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 24, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 2), Q_NEXT
    BYTE Q_REPEAT_X + 1, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 8, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 15, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 3, (B_WHITE + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_REPEAT_X + 22, (B_RED + LEN_B_COLORS * 0), Q_NEXT
    BYTE Q_REPEAT_X + 2, (B_RED + LEN_B_COLORS * 1), Q_NEXT
    BYTE Q_EOG